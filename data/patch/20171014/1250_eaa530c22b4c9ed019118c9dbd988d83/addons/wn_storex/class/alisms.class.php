<?php
 load()->func("\x63\157\155\x6d\x75\156\x69\143\141\164\x69\157\x6e"); class Alisms { private $api = "\150\x74\x74\160\x3a\x2f\x2f\x64\x79\163\x6d\163\x61\x70\151\x2e\141\154\x69\171\x75\x6e\143\x73\56\x63\157\x6d\x2f\77"; private $accessKeyId = ''; private $signName = ''; private $accessKeySecret = ''; private $dateTimeFormat = "\x59\x2d\155\55\144\x5c\x54\x48\x3a\x69\72\x73\134\x5a"; protected $format = "\x4a\x53\x4f\x4e"; public function setFormat($format) { goto vnNQC; vnNQC: $DkFJl = !in_array($format, array("\122\x41\127", "\130\115\x4c", "\112\123\117\116")); goto VXGrL; ebsBq: mE1it: goto U8QuB; vKyFa: $this->format = $format; goto ebsBq; VXGrL: if ($DkFJl) { goto mE1it; } goto vKyFa; U8QuB: } public function __construct($accessKeyId, $accessKeySecret, $signName) { goto w9g7k; fKtTu: $this->signName = $signName; goto wXIIa; w9g7k: $this->accessKeyId = $accessKeyId; goto nXuzp; nXuzp: $this->accessKeySecret = $accessKeySecret; goto fKtTu; wXIIa: } public function send($mobile, $TemplateParam, $outOrderId = '', $TemplateCode) { goto OYyAs; OYyAs: $params = $this->params($mobile, $TemplateParam, $outOrderId, $TemplateCode); goto Zxu8V; E0uxc: $apiurl = $this->api . $querydata; goto QnSho; Zxu8V: $sign = $this->computeSignature($params, $this->accessKeySecret); goto caUUW; QnSho: $result = ihttp_get($apiurl); goto HojXc; HojXc: return $result; goto wz30o; caUUW: $params["\x53\x69\147\x6e\x61\164\x75\x72\145"] = $sign; goto ZkLDa; ZkLDa: $querydata = http_build_query($params); goto E0uxc; wz30o: } private function params($mobile, $TemplateParam, $outOrderId, $TemplateCode) { goto C1U_w; C1U_w: date_default_timezone_set("\x47\x4d\x54"); goto xa7RV; xa7RV: $params = array("\120\150\157\156\145\x4e\165\155\142\x65\x72\163" => $mobile, "\123\151\147\x6e\116\x61\x6d\x65" => $this->signName, "\124\x65\155\160\154\141\x74\x65\x43\x6f\144\145" => $TemplateCode, "\124\x65\155\x70\x6c\141\164\x65\x50\141\162\141\x6d" => $TemplateParam, "\x4f\x75\164\x49\x64" => $outOrderId, "\x52\x65\x67\151\x6f\156\x49\144" => "\x63\156\55\x68\x61\156\x67\x7a\150\x6f\x75", "\x41\143\x63\x65\x73\x73\113\x65\171\x49\x64" => $this->accessKeyId, "\106\x6f\x72\x6d\141\x74" => $this->format, "\123\x69\x67\x6e\x61\164\x75\x72\x65\115\x65\164\x68\x6f\144" => "\x48\x4d\x41\x43\x2d\123\110\x41\61", "\123\151\x67\156\x61\164\x75\162\x65\126\x65\162\x73\151\157\156" => "\61\56\x30", "\x53\x69\147\x6e\141\164\x75\162\145\x4e\157\156\143\x65" => uniqid(), "\124\151\x6d\145\x73\x74\x61\x6d\160" => date($this->dateTimeFormat), "\101\x63\164\x69\x6f\156" => "\123\x65\x6e\x64\x53\x6d\x73", "\126\x65\x72\x73\x69\157\156" => "\x32\60\x31\x37\55\60\x35\55\x32\x35"); goto ogCDq; ogCDq: return $params; goto T3gy5; T3gy5: } private function computeSignature($parameters, $accessKeySecret) { goto S0hnW; pQr_z: $signature = $this->signString($stringToSign, $accessKeySecret . "\46"); goto owXWS; owXWS: return $signature; goto d3LG4; YBcOK: o6gAE: goto u9py9; BRa0e: $canonicalizedQueryString = ''; goto F5xw5; F5xw5: $xInAF = !(!empty($parameters) && is_array($parameters)); goto PUqW6; o2Yb2: foreach ($parameters as $key => $value) { $canonicalizedQueryString .= "\x26" . $this->percentEncode($key) . "\x3d" . $this->percentEncode($value); Vx02D: } goto zfZTQ; zfZTQ: ro71p: goto YBcOK; u9py9: $stringToSign = "\x47\105\x54" . "\x26\x25\x32\106\x26" . $this->percentencode(substr($canonicalizedQueryString, 1)); goto pQr_z; PUqW6: if ($xInAF) { goto o6gAE; } goto o2Yb2; S0hnW: ksort($parameters); goto BRa0e; d3LG4: } protected function signString($source, $accessSecret) { return base64_encode(hash_hmac("\163\150\141\x31", $source, $accessSecret, true)); } protected function percentEncode($str) { goto HzMF2; HzMF2: $result = urlencode($str); goto yFKS8; yFKS8: $result = preg_replace("\x2f\134\x2b\x2f", "\45\62\x30", $result); goto MskFp; NrTcH: return $result; goto ee3yb; MskFp: $result = preg_replace("\57\x5c\x2a\57", "\x25\62\x41", $result); goto E9gqi; E9gqi: $result = preg_replace("\57\45\67\x45\57", "\x7e", $result); goto NrTcH; ee3yb: } }